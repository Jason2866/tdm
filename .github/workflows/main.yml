name: Build Workflow

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
jobs:
  build-windows:
      runs-on: windows-2019
      continue-on-error: true
      steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r requirements.txt -r requirements_build.txt
      - name: Run PyInstaller
        run: |
          python -m PyInstaller tdmgr.spec
      - uses: actions/upload-artifact@v3
        with:
          name: app
          path: dist/tdmgr_*.exe

  build-windows-x86:
      runs-on: windows-2019
      continue-on-error: true
      steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          architecture: 'x86'
      - name: Install requirements
        run: |
          pip install -r requirements.txt -r requirements_build.txt
      - name: Run PyInstaller
        run: |
          python -m PyInstaller tdmgr32.spec
      - uses: actions/upload-artifact@v3
        with:
          name: app
          path: dist/tdmgr_*.exe

  build-ubuntu:
      runs-on: ubuntu-20.04
      continue-on-error: true
      steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install requirements
        run: |
          pip install -r requirements.txt -r requirements_build.txt
      - name: Run PyInstaller
        run: |
          python -m PyInstaller tdmgr.spec
      - name: See dist directory
        run: ls dist
      - name: 'gzip file'
        run: gzip dist/tdmgr_*
      - name: 'show gzip'
        run: ls dist
      - uses: actions/upload-artifact@v3
        with:
          name: app
          path: dist/tdmgr_*.gz

  build-macos:
      runs-on: macOS-12
      continue-on-error: true
      steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install requirements
        run: |
          pip install -r requirements.txt -r requirements_build.txt
          brew install create-dmg
      - name: Run PyInstaller
        run: |
          python -m PyInstaller tdmgr_mac.spec
          rm -Rf dist/*.app
          create-dmg tdmgr_Mac_x64.dmg dist
      - name: See dist directory
        run: ls dist
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: /Users/runner/work/tdm/tdm/tdmgr_Mac_x64.dmg

  build-macos-arm:
      runs-on: self-hosted
      continue-on-error: true
      steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install requirements
        run: |
          pip install -r requirements.txt -r requirements_build.txt
          brew install create-dmg
      - name: Run PyInstaller
        run: |
          python -m PyInstaller tdmgr_mac.spec
          rm -Rf dist/*.app
          create-dmg tdmgr_Mac_arm.dmg dist
      - name: See dist directory
        run: ls dist
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: /Volumes/T7-Mac/actions_tdm/_work/tdm/tdm/tdmgr_Mac_arm.dmg

  release:
       needs: [build-windows, build-windows-x86, build-ubuntu, build-macos, build-macos-arm]
       runs-on: ubuntu-latest
       continue-on-error: true
       steps:
       - name: Download artifacts
         uses: actions/download-artifact@v3
         with:
           name: app
           path: ./dist
       - name: setenv release tag
         run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
       - name: Release
         uses: jason2866/action-gh-release@v1.2
         with:
           tag_name: ${{ env.RELEASE_VERSION }}
           prerelease: false
           files: dist/*
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
