name: GitHub release

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
      - actions_mac
    paths-ignore:
      - '**.md'

jobs:
  Binaries:
    runs-on: ${{ matrix.os }}
    outputs:
      version-tag: ${{ steps.version_tag.outputs.VERSION_TAG }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            arch: x86
          - os: windows-2019
            arch: x64
          - os: macos-12
            arch: x64
          - os: macos-14
            arch: arm64

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          architecture: ${{ matrix.arch }}

      - name: Install PyInstaller
        run: pip install -r requirements_build.txt

      - name: Retrieve version tag
        id: version_tag
        shell: bash
        run: echo "VERSION_TAG=$(python -m setuptools_scm)" >> $GITHUB_OUTPUT

      - name: Build with PyInstaller
        run: pyinstaller --noconfirm --clean tdmgr.spec

      - name: Pack Mac binary as DMG ${{ matrix.os }}
        if: ${{ matrix.os }} == "macos-12" || ${{ matrix.os }} == "macos-14"
        run: |
          brew install create-dmg
          create-dmg tdmgr_mac_${{ matrix.arch }}.dmg dist
          rm -rf dist/*.app
          cp /Users/runner/work/tdm/tdm/*.dmg dist

      - name: Upload binaries artifact to workflow
        uses: jason2866/upload-artifact@v2.0.3
        with:
          name: tdmgr
          path: dist/*

  Draft-Release:
        runs-on: ubuntu-latest
        needs: Binaries
        env:
            VERSION_TAG: ${{ needs.Binaries.outputs.version-tag }}
        steps:
            -   name: Download artifacts from build
                uses: jason2866/download-artifact@v3.0.4

            -   name: Create Draft Release
                id: create_release
                uses: softprops/action-gh-release@v2
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: ${{ env.VERSION_TAG }}
                    name: TDM ${{ env.VERSION_TAG }}
                    draft: true
                    prerelease: ${{ github.ref_name == 'refs/heads/develop'}}
                    generate_release_notes: true
                    files: tdmgr/*